:set +m
:set -XNoImplicitPrelude
:set -XOverloadedStrings
:set prompt "\ESC[32m\STX%t\ESC[m\STX [\ESC[33m\STX%w\ESC[m\STX] ( \ESC[36m\STX%s\ESC[m\STX )\nλ "
:set prompt-cont "| "

:module - Prelude
import Foundation

let pi :: Fractional 𝑎 => 𝑎
    pi = fromRational π
    tau :: Fractional 𝑎 => 𝑎
    tau = fromRational τ
    π :: Rational
    π = τ / 2
    τ :: Rational
    τ = 6.28318530717958647692528676655900576839433879875021164194988918461563281257241799725606965068423413596429617302656461329418768921910116446345071881625696223490056820540387704221111928924589790986076392885762195133186689225695129646757356633054240381829129713384692069722090865329642678721452049828254744917401321263117634976304184192565850818343072873578518072
-- intentionally blank --
